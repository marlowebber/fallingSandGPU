#pragma kernel Airflow

float airflow_rand;
Texture2D<float4> airflow_input;
RWTexture2D<float4> airflow_output	;

[numthreads(8,8,1)]

void Airflow (uint3 id : SV_DispatchThreadID)
{
	const int size = 1024;
	
	float spring_height_center = airflow_input[id.xy].r - 0.5;
	float spring_speed_center = airflow_input[id.xy].g - 0.5;
	float avg_nbr_height = 0.0;
	float nbrs = 0.0;
	
	for(float y = -1.0; y <= 1.0; y+=1.0)
	{
		for(float x = -1.0; x <= 1.0; x+=1.0)
		{
			if (x == 0.0 && y == 0.0)
			{
				continue;
			}
			float2 nbr = float2(id.x+x,id.y+y);
			float spring_height_here =  airflow_input[nbr].r - 0.5;
			avg_nbr_height += spring_height_here;
		}
	}
	
	avg_nbr_height = avg_nbr_height/8.0;
	float spring_force_now = (avg_nbr_height - spring_height_center) * 0.5;
	spring_force_now -= spring_height_center * 0.0005;
	spring_speed_center += spring_force_now;
	spring_height_center += spring_speed_center;
	airflow_output[id.xy] = float4( spring_height_center+0.5 , spring_speed_center+0.5 , 0.0 , 1.0  );	
	if (id.x < 5  || id.x > size - 5 || id.y < 5 || id.y > size- 5){airflow_output[id.xy] = float4( 0.5,  0.0, 0.0, 1.0  );}
}







